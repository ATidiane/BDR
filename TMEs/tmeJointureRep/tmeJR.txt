Comprendre le plan reparti d'une requête : Quelle opération est traitée sur quel site ?
                   =======                 ======                           =========

3) Requêtes réparties:
======================
Partiel : on nous donne les plans il faut les expliquer
Examen : on nous donnera pas le plan, il faudra expliquer la requête directement

Un arc: origine:ora11 => destination:ora11, pas de transfert.
Un transfert c'est si origine:ora10 => destination:ora11.

Requête R1: Jointure seule avec un transfert volumineux
===========
SQL>

PLAN_TABLE_OUTPUT
----------------------------------------------------------------------------------------------------
Plan hash value: 99285189

------------------------------------------------------------------------------------------------
| Id  | Operation	   | Name      | Rows  | Bytes | Cost (%CPU)| Time     | Inst	|IN-OUT|
------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT   |	       |  1000 |  1990K|   224	 (1)| 00:00:03 |	|      |
|*  1 |  HASH JOIN	   |	       |  1000 |  1990K|   224	 (1)| 00:00:03 |	|      |
|   2 |   TABLE ACCESS FULL| CLUB      |   100 |   600 |     3	 (0)| 00:00:01 |	|      |
|   3 |   REMOTE	   | STAGIAIRE |  1000 |  1984K|   220	 (0)| 00:00:03 |  SITE2 | R->S |
------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("CNUM"="C"."CNUM")

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=1) "C"."DIVISION"[NUMBER,22], "PROFIL"[VARCHAR2,4000],
       "PRENOM"[VARCHAR2,30]
   2 - "C"."CNUM"[NUMBER,22], "C"."DIVISION"[NUMBER,22]
   3 - "CNUM"[NUMBER,22], "PRENOM"[VARCHAR2,30], "PROFIL"[VARCHAR2,4000]

Remote SQL Information (identified by operation id):
----------------------------------------------------

   3 - SELECT "CNUM","PRENOM","PROFIL" FROM "STAGIAIRE" "STAGIAIRE" (accessing
       'SITE2.UFR-INFO-P6.JUSSIEU.FR' )

Dessin de l'arbre:
==================

                0 @ora11
                |
                1
               HASH Join @ora11
            |       |
    @ora11  2       3
TABLE ACCESS FULL   @ora10 REMOTE
      CLUB                 Select cnum, prenom, profil
                           From Stagiaire

                   |
                   |
                   |
                   =


                   ¶prenom, profil, @ora11
                   |
                   |
                  |><| @ora11
                  cnum
             |            | (ça c'est la flèche rouge)
             |            | (ce qu'il faut repérer, ce morceau !!!!!)
     @ora11 CLUB          ¶cnum, prenom, profil @ora10
                          |
                          |
                          Stagiaire @ora10


Répérer le morceau qui se fait ailleurs sur la base ora10, c'est ce qui est
important: les transferts, les morceaux distants, etc...


Requête R2: Jointure avec sélection
===========
SQL>

Plan hash value: 4004391546

----------------------------------------------------------------------------------------------------------
| Id  | Operation		     | Name	 | Rows  | Bytes | Cost (%CPU)| Time	 | Inst   |IN-OUT|
----------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT	     |		 |    16 | 32816 |   223   (1)| 00:00:03 |	  |	 |
|   1 |  MERGE JOIN		     |		 |    16 | 32816 |   223   (1)| 00:00:03 |	  |	 |
|   2 |   TABLE ACCESS BY INDEX ROWID| CLUB	 |   100 |   600 |     2   (0)| 00:00:01 |	  |	 |
|   3 |    INDEX FULL SCAN	     | I_C_CNUM  |   100 |	 |     1   (0)| 00:00:01 |	  |	 |
|*  4 |   SORT JOIN		     |		 |    16 | 32720 |   221   (1)| 00:00:03 |	  |	 |
|   5 |    REMOTE		     | STAGIAIRE |    16 | 32720 |   220   (0)| 00:00:03 |  SITE2 | R->S |
----------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   4 - access("CNUM"="C"."CNUM")
       filter("CNUM"="C"."CNUM")

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=0) "C"."DIVISION"[NUMBER,22], "PROFIL"[VARCHAR2,4000], "PRENOM"[VARCHAR2,30]
   2 - "C"."CNUM"[NUMBER,22], "C"."DIVISION"[NUMBER,22]
   3 - "C".ROWID[ROWID,10], "C"."CNUM"[NUMBER,22]
   4 - (#keys=1) "CNUM"[NUMBER,22], "PROFIL"[VARCHAR2,4000], "PRENOM"[VARCHAR2,30]
   5 - "CNUM"[NUMBER,22], "PRENOM"[VARCHAR2,30], "SALAIRE"[NUMBER,22], "PROFIL"[VARCHAR2,4000]

Remote SQL Information (identified by operation id):
----------------------------------------------------

   5 - SELECT "CNUM","PRENOM","SALAIRE","PROFIL" FROM "STAGIAIRE" "STAGIAIRE" WHERE
       "SALAIRE">59000 (accessing 'SITE2.UFR-INFO-P6.JUSSIEU.FR' )


Relation entre un noeud son parent:

	ID  PARENT_ID
---------- ----------
	 1	    0
	 2	    1
	 4	    1
	 3	    2
	 5	    4

Dessin de l'arbre:
==================

                     0     @ora11
                  SELECT                                            |><|   
                     |                                         |            | 
                     |                                      CLUB      ¶cnum, profil, prenom    
                     1                                                      | 
               MERGE Join  @ora11                      ====>           Select Salaire > 59000 
              |              |                                              |
              |              |                                         Stagiaires
       @ora11 2              4 
       TABLE ACCESS      SORT JOIN ACCESS CNUM
      BY INDEX ROWID         |
             CLUB            |
              |              |
              |              |
              3              5
       INDEX FULL SCAN     REMOTE
                           Select cnum, profil, prenom, salaire
                           From Stagiaire
                           where salaire > 59000


Quand on a un TABLE ACCESS et après un INDEX FULL SCAN, alors forcément on a
récupérer les index pour les utiliser TABLE ACCESS.
Lorsque la table club a été crée, on ne peut pas supposer qu'elle était triée.
Mais on a pu les lire en ordre croissant en utilisant INDEX FULL SCAN.

Le noeud 3 correspond: lire les ROWIDs des club dans l'ordre croissant des cnum.
                                                      ================
cnum: numéro de club.
=====
On peut dire que c'est l'index qui se charge du tri pour la branche à gauche

Quand ça sera à nous de programmer la couche verte avec JDBC, alors on devra
déléguer le tri à ORDER BY.

Pour que ça change de site, il faut qu'il soit écrit REMOTE. Sinon on reste
toujours sur le même site.

Le but c'est donc d'essayer de voir que la sélection s'est faite à distance.
======

On voit la requête SQL sur le (site 2), et on aimerait voir le plan de cette
dernière, on pourrai alors la copier et l'exécuter sur le même site.


Requête R3: Jointure très sélective
===========

Requête R3a: Jointure très sélective et avec un transfert volumineux
===========

SQL>
Plan hash value: 99285189

------------------------------------------------------------------------------------------------
| Id  | Operation	   | Name      | Rows  | Bytes | Cost (%CPU)| Time     | Inst	|IN-OUT|
------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT   |	       |   100 |   199K|   224	 (1)| 00:00:03 |	|      |
|*  1 |  HASH JOIN	   |	       |   100 |   199K|   224	 (1)| 00:00:03 |	|      |
|*  2 |   TABLE ACCESS FULL| CLUB      |    10 |   130 |     3	 (0)| 00:00:01 |	|      |
|   3 |   REMOTE	   | STAGIAIRE |  1000 |  1984K|   220	 (0)| 00:00:03 |  SITE2 | R->S |
------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("CNUM"="C"."CNUM")
   2 - filter("C"."VILLE"='ville7')

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=1) "C"."DIVISION"[NUMBER,22], "PROFIL"[VARCHAR2,4000],
       "PRENOM"[VARCHAR2,30]
   2 - "C"."CNUM"[NUMBER,22], "C"."DIVISION"[NUMBER,22]
   3 - "CNUM"[NUMBER,22], "PRENOM"[VARCHAR2,30], "PROFIL"[VARCHAR2,4000]

Remote SQL Information (identified by operation id):
----------------------------------------------------

   3 - SELECT "CNUM","PRENOM","PROFIL" FROM "STAGIAIRE" "STAGIAIRE" (accessing
       'SITE2.UFR-INFO-P6.JUSSIEU.FR' )


Relation entre un noeud son parent:

	ID  PARENT_ID
---------- ----------
	 1	    0
	 3	    1
	 2	    1

Dessin de l'arbre:
==================

                     0     @ora11                                    ¶
                  SELECT                                             |
                     |                                              |><|   
                     |                                         |            | 1,98 Mo
                     |                                     Selection ¶cnum, profil, prenom    
                     1                                     Ville='7'        | 
               HASH Join  @ora11                      ====>    |         Stagiaires   
              |              |                               CLUB         
              |              |                                        
       @ora11 2              3 
       TABLE ACCESS       REMOTE @ora10
         FULL CLUB           |
                          Select cnum, prenom, profil
                          From Stagiaire



Requête R3b: Jointure très sélective et avec un transfert faible
===========
SQL>
Plan hash value: 570485336

----------------------------------------------------------------------------------------------------
| Id  | Operation	       | Name	   | Rows  | Bytes | Cost (%CPU)| Time	   | Inst   |IN-OUT|
----------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT REMOTE|	   |   100 |   393K|   225   (1)| 00:00:03 |	    |	   |
|*  1 |  HASH JOIN	       |	   |   100 |   393K|   225   (1)| 00:00:03 |	    |	   |
|   2 |   REMOTE	       | CLUB	   |	10 |   200 |	 3   (0)| 00:00:01 |	  ! | R->S |
|   3 |   TABLE ACCESS FULL    | STAGIAIRE |  1000 |  3916K|   221   (1)| 00:00:03 |  ORA10 |	   |
----------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("A2"."CNUM"="A1"."CNUM")

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=1) "A1"."DIVISION"[NUMBER,22], "A2"."PROFIL"[VARCHAR2,4000],
       "A2"."PRENOM"[VARCHAR2,30]
   2 - "A1"."CNUM"[NUMBER,22], "A1"."DIVISION"[NUMBER,22], "A1"."VILLE"[VARCHAR2,30]
   3 - "A2"."CNUM"[NUMBER,22], "A2"."PRENOM"[VARCHAR2,30], "A2"."PROFIL"[VARCHAR2,4000]

Remote SQL Information (identified by operation id):
----------------------------------------------------

   2 - SELECT "CNUM","DIVISION","VILLE" FROM "CLUB" "A1" WHERE "VILLE"='ville7' (accessing
       '!' )

Dessin de l'arbre:
==================                                         
                                                            ¶division, profil, prenom @ora11
                                                            | 393K = 0.4 M
                     0   @ora10                             ¶division, profil, prenom @ora10
                  SELECT                                    |
                     |                                     |><|   
                     |                              |                 | 
                     |                       ¶nom, division           |
                     1                              |                 | 200
               HASH Join  @ora10             ====>  Selection         |
              |              |                      ville='7'         |   
              |              |                      |                 |  
       @ora11 2              3                     CLUB          Stagiaires @ora10
       REMOTE CLUB       TABLE ACCESS @ora10
              |           FULL STAGIAIRE
              |
 Select cnum, division, ville
 From CLUB
 Where Ville='ville7'


R3a, R3b: S'appuyer sur la colonne Byte pour connaître la quantité de données
=========
transférées.

R3a: transférer tous les stagiaires (1,98 Mo) (ligne où se trouve REMOTE)
R3b: 

Site1 : selectionner les clubs ville7 et les envoyer à site 2
Site2 : calculer la requête et envoyer les résultas à site 1

La jointure se fasse la ou se trouve les stagiaires

Ce qu'on va nous demander à l'examen :)
======================================
Optimiser la requête pour minimiser les transferts. Les jointures sont tellement
rapides qu'on peut les négliger. 1% pour les calculs CPU, tout le reste ce sont
les transferts.

4) Durée des transferts:
=====================

a) 3 secondes
b) 1 seconde

4) Fragementation:
==================
